@model List<LocationViewModel>

@if (ViewBag.ErrorMessage != null)
{
	<div class="validation-error-message">
		@ViewBag.ErrorMessage
	</div>
}
@if (TempData["ErrorMessage"] != null)
{
	<div class="validation-error-message">
		@TempData["ErrorMessage"]
	</div>
}

<table class="table-container no-hover">
	<thead class="table-head-bookings">
		<tr>
			<th>Name</th>
			<th>Address</th>
			<th>Postal Code</th>
			<th>City</th>
			<th>Total seats</th>
			<th>Actions</th>
		</tr>
	</thead>
	<tbody class="table-body-bookings">
		@foreach (var location in Model)
		{
			<tr class="table-row">
				<td>@location.Name</td>
				<td>@location.StreetName</td>
				<td>@location.PostalCode</td>
				<td>@location.City</td>
				<td>@location.SeatCount</td>
				<td>
					<div class="dropdown" data-id="@location.Id">
						<button type="button" class="dropdown-toggle">
							<img id="buttonDropdown" src="~/images/button-more.svg" alt="Dropdown icon more button" />
						</button>
						<div class="dropdown-body">
							<a class="dropdown-action edit" asp-route-id="@location.Id" asp-controller="Location" asp-action="Edit">
								<img src="~/images/note-pencil-icon.svg" alt="Dropdown pencil icon" />
								Edit
							</a>
							<button class="dropdown-action delete open-modal" type="button" data-id="@location.Id" data-name="@location.Name">
								<img src="~/images/trash-icon.svg" alt="Dropdown trash icon" />
								Delete
							</button>
						</div>
					</div>
				</td>
			</tr>
		}
	</tbody>
</table>

<div id="deleteLocationModal" class="modal" role="dialog">
	<div class="modal-content">
		<header class="modal-header">
			<h4>Confirm deletion</h4>
			<button type="button" class="close-modal" data-close-modal aria-label="Close">&times;</button>
		</header>
		<div class="modal-body">
			<p>Are you sure you want to delete this location?</p>
			<p id="locationNameModal">Location name: </p>
			<form id="deleteForm" action="/locations/delete" method="post">
				<input type="hidden" name="id" id="locationIdModal" />
				<div class="form-buttons">
					<button type="button" class="btn btn-secondary" data-close-modal>Cancel</button>
					<button type="submit" class="btn btn-primary">Confirm</button>
				</div>
			</form>
		</div>
	</div>
</div>

<script>
	document.addEventListener("DOMContentLoaded", function () {

		const dropdowns = document.querySelectorAll('.dropdown');

		dropdowns.forEach(dropdown => {
			const toggleButton = dropdown.querySelector('.dropdown-toggle');
			const dropdownBody = dropdown.querySelector('.dropdown-body');

			toggleButton.addEventListener('click', function (e) {
				e.stopPropagation();
				if (dropdownBody.style.display === 'block') {
					dropdownBody.style.display = 'none'
				} else {
					dropdownBody.style.display = 'block'
				}
			});

			window.addEventListener('click', function () {
				if (dropdownBody.style.display === 'block') {
					dropdownBody.style.display = 'none'
				}
			});
		});

		const openModalButton = document.querySelectorAll('.open-modal');
		const modal = document.getElementById('deleteLocationModal');
		const closeModalButton = document.querySelectorAll('[data-close-modal]');

		const locationNameModal = document.getElementById('locationNameModal');
		const locationIdModal = document.getElementById('locationIdModal');

		openModalButton.forEach(button => {
			button.addEventListener('click', function () {
				const locationId = button.getAttribute('data-id');
				const locationName = button.getAttribute('data-name');

				locationNameModal.innerText = `Location name: ${locationName}`;
				locationIdModal.value = locationId;

				modal.style.display = 'flex';
			});
		});

		closeModalButton.forEach(button => {
			button.addEventListener('click', () => {
				modal.style.display = 'none';
			});
		});
	});
</script>